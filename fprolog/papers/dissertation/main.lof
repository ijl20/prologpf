\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces Search tree for goal clause g(U,V).}}{8}
\contentsline {figure}{\numberline {1.2}{\ignorespaces Transformation to an OR-only tree.}}{9}
\contentsline {figure}{\numberline {1.3}{\ignorespaces OR-only tree with integer branch labels.}}{10}
\contentsline {figure}{\numberline {1.4}{\ignorespaces Prolog implementation of r(U,V) with cut and transformed tree.}}{14}
\contentsline {figure}{\numberline {1.5}{\ignorespaces Program and search tree for program with function r(X).}}{15}
\contentsline {figure}{\numberline {1.6}{\ignorespaces Transformation of tree containing r(X) to OR-only tree.}}{16}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces OR-parallel execution of goal clause g(U,V).}}{20}
\contentsline {figure}{\numberline {2.2}{\ignorespaces AND-parallel execution of goal clause g(U,V).}}{20}
\contentsline {figure}{\numberline {2.3}{\ignorespaces Variable bindings in OR-parallel subtrees.}}{21}
\contentsline {figure}{\numberline {2.4}{\ignorespaces Communication of bindings in dependent AND-parallelism.}}{28}
\contentsline {figure}{\numberline {2.5}{\ignorespaces Dataflow communication of bindings in EPILOG.}}{31}
\contentsline {figure}{\numberline {2.6}{\ignorespaces Oracles within the OR-only tree from Figure 2.3\hbox {}.}}{45}
\contentsline {figure}{\numberline {2.7}{\ignorespaces Distributed target architecture of the Delphi machine.}}{47}
\contentsline {figure}{\numberline {2.8}{\ignorespaces \textit {Partition left} of sample tree in \cite {Kle91} for $G=6$.}}{52}
\contentsline {figure}{\numberline {2.9}{\ignorespaces \textit {Partition central} of sample tree in \cite {Kle91} for $G=6$.}}{53}
\contentsline {figure}{\numberline {2.10}{\ignorespaces First phase of \textit {breadth-first partitioning}.}}{55}
\contentsline {figure}{\numberline {2.11}{\ignorespaces Second phase of \textit {breadth-first partitioning}.}}{56}
\contentsline {figure}{\numberline {2.12}{\ignorespaces Path processor assignment in \textit {AP} versus \textit {BFP}.}}{57}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Search tree for 8 queens problem.}}{61}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Single cpu runtimes for 8-queens benchmark.}}{70}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Single cpu runtimes for 10-queens benchmark.}}{71}
\contentsline {figure}{\numberline {3.4}{\ignorespaces Single cpu performance for Pentominoes benchmark.}}{73}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Runtimes for 8-queens benchmark for $G=1\dots 30$ and $L=21$.}}{74}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Speedup for 8-queens benchmark for $G=1\dots 30$ and $L=21$.}}{75}
\contentsline {figure}{\numberline {3.7}{\ignorespaces Runtimes for 10-queens benchmark for $G=1\dots 30$ and $L=27$.}}{76}
\contentsline {figure}{\numberline {3.8}{\ignorespaces Speedup for 10-queens benchmark for $G=1\dots 30$ and $L=27$.}}{77}
\contentsline {figure}{\numberline {3.9}{\ignorespaces Runtimes for Pentominoes benchmark for $G=1\dots 30$ and $L=21$.}}{78}
\contentsline {figure}{\numberline {3.10}{\ignorespaces Speedup for Pentominoes benchmark for $G=1\dots 30$ and $L=21$.}}{79}
\contentsline {figure}{\numberline {3.11}{\ignorespaces Runtimes for Pentominoes benchmark for $G=1\dots 30$ and $L=21$ versus $L=24$.}}{82}
\contentsline {figure}{\numberline {3.12}{\ignorespaces Work in milliseconds under each oracle for Pentominoes $L=21$}}{84}
\contentsline {figure}{\numberline {3.13}{\ignorespaces Work in milliseconds under oracle number 200 to 400 for Pentominoes $L=21$}}{85}
\contentsline {figure}{\numberline {3.14}{\ignorespaces Actual and limits for speedup of 8-queens benchmark for $G=30$ and $L=1\dots 36$.}}{87}
\contentsline {figure}{\numberline {3.15}{\ignorespaces Speedup for 10-queens benchmark for $G=30$ and $L=1\dots 30$.}}{88}
\contentsline {figure}{\numberline {3.16}{\ignorespaces Speedup for Pentominoes benchmark for $G=30$ and $L=1\dots 30$.}}{89}
\contentsline {figure}{\numberline {3.17}{\ignorespaces Speedup for 8-queens benchmark for $G=1\dots 30$ and $L=1\dots 36$.}}{91}
\contentsline {figure}{\numberline {3.18}{\ignorespaces Speedup for 10-queens benchmark for $G=1\dots 30$ and $L=1\dots 39$.}}{92}
\contentsline {figure}{\numberline {3.19}{\ignorespaces Speedup for Pentominoes benchmark for $G=1\dots 30$ and $L=1\dots 33$.}}{93}
\contentsline {figure}{\numberline {3.20}{\ignorespaces Work splitting at busy path processor.}}{95}
\contentsline {figure}{\numberline {3.21}{\ignorespaces Search tree for \texttt {member/fact} program.}}{97}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces The effect of \textit {cut} on the AND-OR search tree.}}{104}
\contentsline {figure}{\numberline {4.2}{\ignorespaces Effect of \textit {cut} on OR-only search tree.}}{105}
\contentsline {figure}{\numberline {4.3}{\ignorespaces Affect of \textit {cut} limited to depth of containing clause in OR-only tree.}}{108}
\contentsline {figure}{\numberline {4.4}{\ignorespaces Deterministic execution of a PrologPF relation containing \textit {cut}.}}{110}
\contentsline {figure}{\numberline {4.5}{\ignorespaces Oracle ambiguity cause by \textit {cut} in a relation with multiple solutions.}}{111}
\contentsline {figure}{\numberline {4.6}{\ignorespaces Pruned subtree allocation caused by open oracles in relation with \textit {cut}.}}{112}
\contentsline {figure}{\numberline {4.7}{\ignorespaces Modified depth limit definition to permit non-deterministic relations with \textit {cut}.}}{113}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces Initial acyclic directed graph for Exercise 4.}}{153}
\contentsline {figure}{\numberline {6.2}{\ignorespaces Complete graph for Exercise 4.}}{154}
\contentsline {figure}{\numberline {6.3}{\ignorespaces Solution for Chang and Lee example 2.}}{161}
\contentsline {figure}{\numberline {6.4}{\ignorespaces Runtimes for Chang Lee example 2 for $G=1\dots 30$ and $L=23$.}}{162}
\contentsline {figure}{\numberline {6.5}{\ignorespaces Runtimes for Overbeek example 4 for $G=1\dots 42$ and $L=130$.}}{163}
\contentsline {figure}{\numberline {6.6}{\ignorespaces Speedup for Overbeek example 4 for $G=1\dots 42$ and $L=130$.}}{164}
\contentsline {figure}{\numberline {6.7}{\ignorespaces Greater than linear speedup for single-solution problems.}}{165}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {7.1}{\ignorespaces Use of oracles in breadth-first partitioning.}}{169}
\contentsline {figure}{\numberline {7.2}{\ignorespaces Search tree partitioning without oracles.}}{171}
\contentsline {figure}{\numberline {7.3}{\ignorespaces Search tree for \texttt {member/fact} program with horizontal selection function.}}{173}
\contentsline {figure}{\numberline {7.4}{\ignorespaces Search tree for \texttt {member/fact} program with sloping selection function.}}{174}
\contentsline {figure}{\numberline {7.5}{\ignorespaces Count of open oracles for Pentominoes problem for $L=3\dots 33$.}}{178}
\contentsline {figure}{\numberline {7.6}{\ignorespaces Oracle stack size for Pentominoes problem for $L=3\dots 33$.}}{178}
\contentsline {figure}{\numberline {7.7}{\ignorespaces Sequential execution component of Pentominoes problem for $L=3\dots 33$.}}{180}
\contentsline {figure}{\numberline {7.8}{\ignorespaces Repeated use of a depth limit and \texttt {kappa} within a subtree.}}{182}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {8.1}{\ignorespaces Work splitting.}}{188}
\contentsline {figure}{\numberline {8.2}{\ignorespaces Interruption of a busy path processor.}}{189}
\contentsline {figure}{\numberline {8.3}{\ignorespaces Assignment of work to an idle path processor.}}{190}
\contentsline {figure}{\numberline {8.4}{\ignorespaces Interpretation of oracle as dividing search tree.}}{193}
\contentsline {figure}{\numberline {8.5}{\ignorespaces Pentominoes: splitting with fixed incremental depth limit.}}{194}
\contentsline {figure}{\numberline {8.6}{\ignorespaces Pentominoes: splitting with depth limit doubling.}}{196}
\contentsline {figure}{\numberline {8.7}{\ignorespaces Pentominoes: fixed depth increment versus doubling.}}{197}
\contentsline {figure}{\numberline {8.8}{\ignorespaces Pentominoes: full oracles and kappa versus one-time partitioning.}}{198}
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {A.1}{\ignorespaces System communications architecture}}{206}
\contentsline {figure}{\numberline {A.2}{\ignorespaces Skynet control processor user interface.}}{210}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {B.1}{\ignorespaces 8 Queens: search tree.}}{213}
\contentsline {figure}{\numberline {B.2}{\ignorespaces 10 Queens: search tree.}}{214}
\contentsline {figure}{\numberline {B.3}{\ignorespaces Pentominoes: search tree.}}{215}
\contentsline {figure}{\numberline {B.4}{\ignorespaces Chang and Lee Example 2: search tree.}}{219}
\contentsline {figure}{\numberline {B.5}{\ignorespaces Overbeek Example 4: search tree.}}{220}
\addvspace {10\p@ }
